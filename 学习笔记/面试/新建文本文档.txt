1.map
HashSet:底层是采用hashMap实现的，查询效率和增删效率都比较高。当使用add方法将对象添加
到Set当中时，实际上是将该对象作为底层所维护的Map对象的key，而value则都是同一个
Object对象（该对象我们用不上）；
MAP:HashMap底层实现采用了哈希表,哈希表的本质就是"数组+链表,数组:占用空间连续，
寻址容易，查询速度快。但是，增加和删除效率非常低。链表:占用空间不连续。寻址困难， 
查询速度慢。但是,增加和删除效率非常高。哈希表结合数组和链表的优点。
在jdk1.8以后，元素添加的方式是到链表的尾部，jdk1.7是添加到链表的头部，HashMap在并发执
行put操作时会引起死循环。当两个元素的HashCode值相同时，它们就会被放到同一个链表中，当
链表中的元素个数大于8的时候，就会呈红黑树分布来降低链表的层级数，当链表个数小于6的时候，
红黑树就会转换成当向链表。在jdk1.7的时候链表没有红黑树这种结构。数组的初始长度为16，会在
元素装满数组长度的0.75倍时进行扩容，扩容的大小是原来的两倍。
2.static：static块可以用来优化程序性能，因为只会在类加载的时候执行一次并进行初始化。static
的主要意义是在于创建独立于具体对象的域变量或者方法。以致于即使没有创建对象，也能使用属性
和调用方法！被static修饰的变量或者方法是独立于该类的任何对象，也就是说，这些变量和方法不
属于任何一个实例对象，而是被类的实例对象所共享。
问：难道jdk1.8以后它就是安全的吗？

2.数据库优化有哪些方式？

3.前端传过来一些重复的数据，你是怎么幂等的？

4.数据库存储的引擎有哪些？

5.什么是事务？有哪些特点？事务的隔离级别有哪些？mysql默认隔离级别有哪些？

6.什么是数据库索引，索引包括哪些类型？

7.聚集索引和非聚集索引有什么区别？

8.数据库锁机制了解吗？

9.在开发中有没有遇到产生死锁的现象？

10.mysql和Oracle有什么区别？

11.AOP面试题

12.反射机制

13concurrentHashMap线程安全

14.什么样的场景使用ArrayList,LinkList.

15.spring 的生命周期

16.多线程基础知识。

17.JVM原理














